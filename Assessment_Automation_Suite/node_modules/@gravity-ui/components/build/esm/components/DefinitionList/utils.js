import { block } from '../utils/cn';
export const b = block('definition-list');
export function isUnbreakableOver(limit) {
    return function (value) {
        const posibleLines = value.split(/\s+/);
        return posibleLines.some((line) => line.length > limit);
    };
}
export const isGroup = (item) => 'label' in item && !('name' in item);
export const onlySingleItems = (items) => !items.some((el) => isGroup(el));
export function getAllItemsAsGroups(items) {
    const result = [];
    let temporaryList = [];
    for (const item of items) {
        if (isGroup(item)) {
            if (temporaryList.length) {
                result.push({ items: temporaryList, label: null });
                temporaryList = [];
            }
            result.push(item);
        }
        else {
            temporaryList.push(item);
        }
    }
    if (temporaryList.length) {
        result.push({ items: temporaryList, label: null });
        temporaryList = [];
    }
    return result;
}
export function getTitle(title, content) {
    if (title) {
        return title;
    }
    if (typeof content === 'string' || typeof content === 'number') {
        return String(content);
    }
    return undefined;
}

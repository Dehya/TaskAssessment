import React from 'react';
import { ArrowLeft as ArrowLeftIcon } from '@gravity-ui/icons';
import { Button, Icon, Sheet } from '@gravity-ui/uikit';
import { block } from '../../utils/cn';
import { i18n } from '../i18n';
import './MobileImagePreview.css';
const cn = block('mobile-image-preview');
export function MobileImagePreview({ previewSrc, visible, onClose, actions, fileName, }) {
    const [showError, setShowError] = React.useState(false);
    const showSheet = Boolean(previewSrc && visible);
    const handleImagesError = () => {
        setShowError(true);
    };
    return (React.createElement(Sheet, { visible: showSheet, onClose: onClose, contentClassName: cn('sheet-content') },
        React.createElement("div", { className: cn('container'), style: {} },
            showError ? (React.createElement("div", { className: cn('error-label') }, i18n('label_image-preview-error'))) : (React.createElement("img", { className: cn('image'), src: previewSrc, alt: fileName, onError: handleImagesError })),
            React.createElement(Button, { view: "raised", size: "xl", className: cn('back-button'), onClick: onClose },
                React.createElement(Icon, { data: ArrowLeftIcon, size: 20 })),
            React.createElement("div", { className: cn('action-buttons') }, actions === null || actions === void 0 ? void 0 : actions.map((action) => (React.createElement(Button, { size: "xl", key: action.id, onClick: action.onClick, view: "raised" },
                React.createElement(Icon, { data: action.icon, size: 20 }))))))));
}
MobileImagePreview.displayName = 'MobileImagePreview';

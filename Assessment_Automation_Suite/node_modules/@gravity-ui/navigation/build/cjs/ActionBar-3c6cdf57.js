'use strict';

var React = require('react');
var cn = require('./cn-9933321a.js');
var styleInject_es = require('./style-inject.es-dcee06b6.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var css_248z$4 = ".gn-action-bar-group{align-items:center;display:flex;flex-flow:row nowrap;justify-content:flex-start;margin:0;padding:0}.gn-action-bar-group_pull_left{margin-left:0;margin-right:auto}.gn-action-bar-group_pull_right{margin-left:auto;margin-right:0}.gn-action-bar-group_pull_center{margin-left:auto;margin-right:auto}";
styleInject_es.styleInject(css_248z$4);

const b$4 = cn.block('action-bar-group');
const ActionBarGroup = ({ children, className, pull }) => {
    return (React__default["default"].createElement("ul", { className: b$4({ pull }, className), role: "group" }, children));
};
ActionBarGroup.displayName = 'ActionBar.Group';

var css_248z$3 = ".gn-action-bar-item{list-style:none;margin:0;padding:0}.gn-action-bar-item_pull_left{margin-left:0;margin-right:auto}.gn-action-bar-item_pull_right{margin-left:auto;margin-right:0}.gn-action-bar-item_pull_center{margin-left:auto;margin-right:auto}.gn-action-bar-item+.gn-action-bar-item_spacing{margin-left:8px}";
styleInject_es.styleInject(css_248z$3);

const b$3 = cn.block('action-bar-item');
const ActionBarItem = ({ children, className, pull, spacing = true }) => {
    return (React__default["default"].createElement("li", { className: b$3({ pull, spacing }, className), role: "menuitem" }, children));
};
ActionBarItem.displayName = 'ActionBar.Item';

var css_248z$2 = ".gn-action-bar-section{align-items:stretch;display:flex;flex-flow:row nowrap;justify-content:flex-start}.gn-action-bar-section+.gn-action-bar-section{border-left:1px solid var(--g-color-line-generic)}.gn-action-bar-section_type_primary{flex:1 1 auto;padding-left:20px;padding-right:20px}.gn-action-bar-section_type_secondary{padding-left:6px;padding-right:6px}";
styleInject_es.styleInject(css_248z$2);

const b$2 = cn.block('action-bar-section');
const ActionBarSection = ({ children, type = 'primary' }) => {
    return (React__default["default"].createElement("div", { className: b$2({ type }), role: "menu" }, children));
};
ActionBarSection.displayName = 'ActionBar.Section';

var css_248z$1 = ".gn-action-bar-separator{border-right:1px solid var(--g-color-line-generic);height:40px;list-style:none;margin:0 6px;padding:0}";
styleInject_es.styleInject(css_248z$1);

const b$1 = cn.block('action-bar-separator');
const ActionBarSeparator = () => {
    return React__default["default"].createElement("li", { role: "separator", className: b$1(), "aria-hidden": true });
};
ActionBarSeparator.displayName = 'ActionBar.Separator';

var css_248z = ".gn-action-bar{align-items:stretch;border-bottom:1px solid var(--g-color-line-generic);box-sizing:border-box;display:flex;flex-flow:row nowrap;height:40px;justify-content:flex-start}";
styleInject_es.styleInject(css_248z);

const b = cn.block('action-bar');
const ActionBar = ({ children, className, 'aria-label': ariaLabel }) => {
    return (React__default["default"].createElement("section", { className: b(null, className), "aria-label": ariaLabel }, children));
};
ActionBar.displayName = 'ActionBar';
const PublicActionBar = Object.assign(ActionBar, {
    Section: ActionBarSection,
    Group: ActionBarGroup,
    Item: ActionBarItem,
    Separator: ActionBarSeparator,
});

exports.PublicActionBar = PublicActionBar;
//# sourceMappingURL=ActionBar-3c6cdf57.js.map

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var AsideHeader = require('./AsideHeader.js');
var AsideHeaderContext = require('./AsideHeaderContext.js');
var FooterItem = require('./FooterItem.js');
var PageLayout = require('./PageLayout.js');
var PageLayoutAside = require('./PageLayoutAside-af13d746.js');
var AsideFallback = require('./AsideFallback.js');
var Drawer = require('./Drawer.js');
var FooterItem$1 = require('./FooterItem-003eb137.js');
var React = require('react');
var uikit = require('@gravity-ui/uikit');
var debounce = require('./debounce-8772fd80.js');
var cn = require('./cn-9933321a.js');
var tslib_es6 = require('./tslib.es6-705c6589.js');
var styleInject_es = require('./style-inject.es-dcee06b6.js');
var icons = require('@gravity-ui/icons');
var ActionBar = require('./ActionBar-3c6cdf57.js');
var Title = require('./Title-54580605.js');
var HotkeysPanel = require('./HotkeysPanel-d971b094.js');
var Settings = require('./Settings-8dc2a8ee.js');
require('./Item-7c1b54f5.js');
require('./constants-d81c3867.js');
require('./Content-64d5738a.js');
require('./utils-db3e03c2.js');
require('@gravity-ui/uikit/i18n');
require('./divider-collapsed-b743122e.js');
require('react-dom');
require('@bem-react/classname');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function useOverflowingHorizontalListItems({ containerRef, items, itemSelector, moreButtonWidth = 0, }) {
    const [containerWidth, setContainerWidth] = React.useState(0);
    const [itemWidths, setItemWidths] = React.useState([]);
    React.useLayoutEffect(() => {
        if (!containerRef.current) {
            return;
        }
        const measureItemSizes = () => {
            var _a, _b;
            const itemElements = Array.from((_b = (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.querySelectorAll(itemSelector)) !== null && _b !== void 0 ? _b : []);
            setItemWidths(itemElements.map((item) => item.clientWidth));
        };
        measureItemSizes();
    }, [containerRef, itemSelector]);
    React.useLayoutEffect(() => {
        const footerMenu = containerRef.current;
        if (!footerMenu) {
            return;
        }
        const updateContainerSize = (entries) => {
            if (entries.length > 0 && footerMenu) {
                setContainerWidth(entries[0].contentRect.width);
            }
        };
        const updateContainerSizeDebounced = debounce.debounce_1(updateContainerSize, 100);
        const footerMenuResizeObserver = new ResizeObserver(updateContainerSizeDebounced);
        footerMenuResizeObserver.observe(footerMenu);
    }, [containerRef]);
    const isMeasured = containerWidth > 0;
    const { visibleItems, hiddenItems } = React.useMemo(() => {
        var _a, _b;
        if (!isMeasured) {
            return {
                visibleItems: items !== null && items !== void 0 ? items : [],
                hiddenItems: [],
            };
        }
        const itemsCount = itemWidths.length;
        let visibleItemsCount = 0;
        let remainingContainerWidth = containerWidth;
        for (const width of itemWidths) {
            remainingContainerWidth -= width;
            if (remainingContainerWidth < moreButtonWidth) {
                const isMoreThanOneItemLeft = itemsCount !== visibleItemsCount + 1;
                const hasNoSpaceForTheLastItem = remainingContainerWidth < 0;
                if (isMoreThanOneItemLeft || hasNoSpaceForTheLastItem) {
                    break;
                }
            }
            visibleItemsCount++;
        }
        return {
            visibleItems: (_a = items === null || items === void 0 ? void 0 : items.slice(0, visibleItemsCount)) !== null && _a !== void 0 ? _a : [],
            hiddenItems: (_b = items === null || items === void 0 ? void 0 : items.slice(visibleItemsCount)) !== null && _b !== void 0 ? _b : [],
        };
    }, [containerWidth, isMeasured, itemWidths, items, moreButtonWidth]);
    return { visibleItems, hiddenItems, measured: isMeasured };
}

var css_248z$2 = ".gn-footer-menu-item{align-items:center;align-self:stretch;display:flex;height:100%;justify-content:center}.gn-footer-menu-item .g-menu__item-content{color:var(--g-color-text-secondary);font-size:var(--g-text-body-1-font-size);font-weight:var(--g-text-body-font-weight);line-height:var(--g-text-body-1-line-height);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.gn-footer-menu-item[class]:hover{background-color:inherit}.gn-footer-menu-item[class]:hover[href] .g-menu__item-content{color:var(--g-color-text-link-hover)}";
styleInject_es.styleInject(css_248z$2);

const b$2 = cn.block('footer-menu-item');
const MenuItem = (_a) => {
    var { text, className } = _a, menuItemProps = tslib_es6.__rest(_a, ["text", "className"]);
    return (React__default["default"].createElement(uikit.Menu.Item, Object.assign({ className: b$2(null, className) }, menuItemProps), text));
};

const moreItemsPopupProps = {
    placement: 'top-start',
};

var css_248z$1 = ".gn-footer_desktop{align-items:center;background:var(--g-color-base-background);display:flex;gap:var(--g-spacing-6);height:40px;justify-content:flex-end;padding:0 var(--g-spacing-6) 0 var(--g-spacing-3)}.gn-footer_desktop .gn-footer__menu{align-items:center;align-self:stretch;display:flex;flex:1;min-width:0;visibility:hidden}.gn-footer_desktop .gn-footer__menu_measured{visibility:visible}.gn-footer_desktop .gn-footer__list[class]{background-color:inherit;display:flex;height:100%;padding:0}.gn-footer_desktop .gn-footer__more-button svg{color:var(--g-color-text-secondary)}.gn-footer_desktop .gn-footer__right{align-items:center;display:flex;gap:var(--g-spacing-5)}.gn-footer_desktop .gn-footer__copyright{color:var(--g-color-text-secondary);font-size:var(--g-text-body-1-font-size);font-weight:var(--g-text-body-font-weight);line-height:var(--g-text-body-1-line-height);white-space:nowrap}.gn-footer_desktop .gn-footer__copyright_small{font-size:var(--g-text-caption-2-font-size);font-weight:var(--g-text-caption-font-weight);line-height:var(--g-text-caption-2-line-height)}.gn-footer_with-divider{border-top:1px solid var(--g-color-line-generic)}.gn-footer_view_clear{background:transparent;z-index:-1}";
styleInject_es.styleInject(css_248z$1);

const b$1 = cn.block('footer');
const Footer = ({ className, menuItems: providedMenuItems, withDivider, moreButtonTitle, onMoreButtonClick, view = 'normal', logo, logoWrapperClassName, copyright, }) => {
    var _a;
    const menuContainerRef = React.useRef(null);
    const menuItems = view === 'clear' ? undefined : providedMenuItems;
    const { visibleItems, hiddenItems, measured } = useOverflowingHorizontalListItems({
        containerRef: menuContainerRef,
        items: menuItems,
        itemSelector: `.${b$1('menu-item')}`,
        moreButtonWidth: 28,
    });
    const moreButtonProps = React.useMemo(() => ({
        title: moreButtonTitle,
    }), [moreButtonTitle]);
    const dropdownMenuItems = React.useMemo(() => hiddenItems.map((item) => (Object.assign(Object.assign({}, item), { action: item.onClick }))), [hiddenItems]);
    const shouldRenderLogo = view !== 'clear' && Boolean(logo);
    const shouldRenderMenu = ((_a = menuItems === null || menuItems === void 0 ? void 0 : menuItems.length) !== null && _a !== void 0 ? _a : 0) > 0;
    return (React__default["default"].createElement("footer", { className: b$1({ desktop: true, 'with-divider': withDivider, view }, className) },
        shouldRenderMenu && (React__default["default"].createElement("div", { className: b$1('menu', { measured }), ref: menuContainerRef },
            visibleItems.length > 0 && (React__default["default"].createElement(uikit.Menu, { className: b$1('list') }, visibleItems.map((item, index) => (React__default["default"].createElement(MenuItem, Object.assign({ key: index }, item, { className: b$1('menu-item', item.className) })))))),
            dropdownMenuItems.length > 0 && (React__default["default"].createElement(uikit.DropdownMenu, { items: dropdownMenuItems, switcherWrapperClassName: b$1('more-button'), popupProps: moreItemsPopupProps, defaultSwitcherProps: moreButtonProps, onSwitcherClick: onMoreButtonClick })))),
        React__default["default"].createElement("div", { className: b$1('right') },
            React__default["default"].createElement("small", { className: b$1('copyright', { small: !(menuItems === null || menuItems === void 0 ? void 0 : menuItems.length) }) }, copyright),
            shouldRenderLogo && (React__default["default"].createElement("div", { className: logoWrapperClassName },
                React__default["default"].createElement(PageLayoutAside.Logo, Object.assign({}, logo)))))));
};

var css_248z = ".gn-footer_mobile{background:var(--g-color-base-background);display:flex;flex-direction:column;padding:var(--g-spacing-1) var(--g-spacing-6) var(--g-spacing-3) var(--g-spacing-3)}.gn-footer_mobile .gn-footer_with-divider{border-top:1px solid var(--g-color-line-generic)}.gn-footer_mobile .gn-footer__menu{align-items:center;display:flex;justify-content:space-between;margin-bottom:var(--g-spacing-1);visibility:hidden}.gn-footer_mobile .gn-footer__menu_measured{visibility:visible}.gn-footer_mobile .gn-footer__list[class]{background-color:inherit;display:flex;padding:0}.gn-footer_mobile .gn-footer__menu-item{padding:var(--g-spacing-2) var(--g-spacing-3)}.gn-footer_mobile .gn-footer__bottom-row{align-items:center;display:flex;justify-content:space-between}.gn-footer_mobile .gn-footer__copyright{color:var(--g-color-text-secondary);font-size:var(--g-text-caption-2-font-size);font-weight:var(--g-text-caption-font-weight);line-height:var(--g-text-caption-2-line-height);padding:0 var(--g-spacing-3);white-space:nowrap}.gn-footer__modal .gn-footer__menu-item{color:var(--g-color-text-primary);font-size:var(--g-text-body-2-font-size);font-weight:var(--g-text-body-font-weight);height:48px;line-height:var(--g-text-body-2-line-height)}.gn-footer_view_clear{background:transparent;z-index:-1}.gn-footer_view_clear .gn-footer__bottom-row{justify-content:flex-end}";
styleInject_es.styleInject(css_248z);

const b = cn.block('footer');
const modalId = 'footer-more-items';
const MobileFooter = ({ className, menuItems: providedMenuItems, withDivider, moreButtonTitle, onMoreButtonClick, view = 'normal', logo, logoWrapperClassName, copyright, }) => {
    const [moreItemsMenuVisible, setMoreItemsMenuVisible] = React.useState(false);
    const menuContainerRef = React.useRef(null);
    const handleOpenMoreItemsMenu = React.useCallback((event) => {
        setMoreItemsMenuVisible(true);
        onMoreButtonClick === null || onMoreButtonClick === void 0 ? void 0 : onMoreButtonClick(event);
    }, [onMoreButtonClick]);
    const handleCloseMoreItemsMenu = React.useCallback(() => {
        setMoreItemsMenuVisible(false);
    }, []);
    const menuItems = view === 'clear' ? undefined : providedMenuItems;
    const { visibleItems, hiddenItems, measured } = useOverflowingHorizontalListItems({
        containerRef: menuContainerRef,
        items: menuItems,
        itemSelector: `.${b('menu-item')}`,
        moreButtonWidth: 28,
    });
    const renderMenu = (items) => (React__default["default"].createElement(uikit.Menu, { className: b('list') }, items.map((item, index) => (React__default["default"].createElement(MenuItem, Object.assign({ key: index }, item, { className: b('menu-item', item.className) }))))));
    const shouldRenderLogo = view !== 'clear' && Boolean(logo);
    return (React__default["default"].createElement("footer", { className: b({ mobile: true, 'with-divider': withDivider, view }, className) },
        React__default["default"].createElement("div", { className: b('menu', { measured }), ref: menuContainerRef },
            visibleItems.length > 0 && renderMenu(visibleItems),
            hiddenItems.length > 0 && (React__default["default"].createElement(React__default["default"].Fragment, null,
                React__default["default"].createElement(uikit.Button, { view: "flat-secondary", size: "l", onClick: handleOpenMoreItemsMenu, title: moreButtonTitle },
                    React__default["default"].createElement(uikit.Icon, { data: icons.Ellipsis, size: 16 })),
                React__default["default"].createElement(uikit.Sheet, { id: modalId, visible: moreItemsMenuVisible, className: b('modal'), contentClassName: b('modal-content'), onClose: handleCloseMoreItemsMenu }, renderMenu(hiddenItems))))),
        React__default["default"].createElement("div", { className: b('bottom-row') },
            React__default["default"].createElement("small", { className: b('copyright') }, copyright),
            shouldRenderLogo && (React__default["default"].createElement("div", { className: logoWrapperClassName },
                React__default["default"].createElement(PageLayoutAside.Logo, Object.assign({}, logo)))))));
};

exports.AsideHeader = AsideHeader.AsideHeader;
exports.AsideHeaderContextProvider = AsideHeaderContext.AsideHeaderContextProvider;
exports.useAsideHeaderContext = AsideHeaderContext.useAsideHeaderContext;
exports.FooterItem = FooterItem.FooterItem;
exports.PageLayout = PageLayout.PageLayout;
exports.Logo = PageLayoutAside.Logo;
exports.PageLayoutAside = PageLayoutAside.PageLayoutAside;
exports.AsideFallback = AsideFallback.AsideFallback;
exports.Drawer = Drawer.Drawer;
exports.DrawerItem = Drawer.DrawerItem;
exports.MOBILE_HEADER_EVENT_NAMES = FooterItem$1.MOBILE_HEADER_EVENT_NAMES;
exports.MobileHeader = FooterItem$1.MobileHeader;
exports.MobileHeaderFooterItem = FooterItem$1.FooterItem;
exports.MobileLogo = FooterItem$1.MobileLogo;
exports.getMobileHeaderCustomEvent = FooterItem$1.getMobileHeaderCustomEvent;
exports.ActionBar = ActionBar.PublicActionBar;
exports.Title = Title.Title;
exports.HotkeysPanel = HotkeysPanel.HotkeysPanel;
exports.Settings = Settings.Settings;
exports.useSettingsContext = Settings.useSettingsContext;
exports.useSettingsSelectionContext = Settings.useSettingsSelectionContext;
exports.Footer = Footer;
exports.MobileFooter = MobileFooter;
//# sourceMappingURL=index.js.map

import React__default, { useState, useMemo, useCallback, useEffect } from 'react';
import { Portal, Icon, Popup, List, ActionTooltip } from '@gravity-ui/uikit';
import { useAsideHeaderInnerContext, useAsideHeaderContext } from './AsideHeaderContext.js';
import { I as ITEM_HEIGHT, A as ASIDE_HEADER_ICON_SIZE } from './constants-b1604ff5.js';
import { b as block } from './cn-ffe5e9f5.js';
import { d as debounce_1 } from './debounce-64cd2b4c.js';
import { s as styleInject } from './style-inject.es-1f59c1d0.js';
import { Ellipsis } from '@gravity-ui/icons';

var css_248z$1 = ".gn-composite-bar-highlighted-item{--_--background-color:var(--g-color-base-background);--_--item-icon-background-size:38px;--_--item-background-color-hover:var(--g-color-base-selection-hover);--_--item-selected-background-color-active:var(--g-color-base-selection);display:flex;justify-content:center;position:absolute;z-index:10000}.gn-composite-bar-highlighted-item__icon{align-items:center;background-color:var(--gn-aside-header-background-color,var(--_--background-color));border-radius:7px;box-shadow:0 8px 20px 0 var(--g-color-sfx-shadow);cursor:pointer;display:flex;height:var(--gn-aside-header-item-icon-background-size,var(--_--item-icon-background-size));justify-content:center;overflow:hidden;position:relative;transform:translateY(1px);width:var(--gn-aside-header-item-icon-background-size,var(--_--item-icon-background-size))}.gn-composite-bar-highlighted-item__icon:before{background-color:var(--gn-aside-header-item-current-background-color,var(--_--item-selected-background-color-active));content:\"\";height:100%;position:absolute;width:100%;z-index:-1}.gn-composite-bar-highlighted-item__icon:hover:before{background-color:var(--gn-aside-header-item-background-color-hover,var(--_--item-background-color-hover))}";
styleInject(css_248z$1);

const b$1 = block('composite-bar-highlighted-item');
const DEBOUNCE_TIME = 200;
const HighlightedItem = ({ iconRef, iconNode, onClick, onClickCapture, }) => {
    const { openModalSubscriber } = useAsideHeaderInnerContext();
    const [{ top, left, width, height }, setPosition] = useState({
        top: 0,
        left: 0,
        width: 0,
        height: 0,
    });
    const [isModalOpen, setIsModalOpen] = useState(false);
    const handleResizeDebounced = useMemo(() => debounce_1(() => {
        var _a;
        const { top = 0, left = 0, width = 0, height = 0, } = ((_a = iconRef === null || iconRef === void 0 ? void 0 : iconRef.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect()) || {};
        setPosition({
            top: top + window.scrollY,
            left: left + window.scrollX,
            width,
            height,
        });
    }, DEBOUNCE_TIME, { leading: true }), [iconRef]);
    const handleResize = useCallback(() => handleResizeDebounced(), [handleResizeDebounced]);
    useEffect(() => {
        if (!isModalOpen) {
            return;
        }
        handleResize();
        window.addEventListener('resize', handleResize);
        return () => window.removeEventListener('resize', handleResize);
    }, [handleResize, isModalOpen]);
    openModalSubscriber === null || openModalSubscriber === void 0 ? void 0 : openModalSubscriber((open) => {
        setIsModalOpen(open);
    });
    if (!iconNode || !isModalOpen) {
        return null;
    }
    return (React__default.createElement(Portal, null,
        React__default.createElement("div", { className: b$1(), style: { left, top, width, height }, onClick: onClick, onClickCapture: onClickCapture, "data-toast": true },
            React__default.createElement("div", { className: b$1('icon') }, iconNode))));
};
HighlightedItem.displayName = 'HighlightedItem';

const ITEM_TYPE_REGULAR = 'regular';
const COLLAPSE_ITEM_ID = 'collapse-item-id';
const POPUP_PLACEMENT = ['right-start', 'right-end', 'right'];
const POPUP_ITEM_HEIGHT = 28;

function getItemHeight(item) {
    if (!isMenuItem(item)) {
        return ITEM_HEIGHT;
    }
    switch (item.type) {
        case 'action':
            return 50;
        case 'divider':
            return 15;
        default:
            return ITEM_HEIGHT;
    }
}
function getItemsHeight(items) {
    return items.reduce((sum, item) => sum + getItemHeight(item), 0);
}
function getSelectedItemIndex(items) {
    const index = items.findIndex(({ current }) => Boolean(current));
    return index === -1 ? undefined : index;
}
function getPinnedItems(items) {
    const pinnedItems = [];
    for (const item of items) {
        if (item.pinned) {
            pinnedItems.push(item);
        }
        else if (item.type === 'divider') {
            if (pinnedItems.length > 0 && pinnedItems[pinnedItems.length - 1].type !== 'divider') {
                pinnedItems.push(item);
            }
        }
    }
    return pinnedItems;
}
function getItemsMinHeight(items) {
    const pinnedItems = getPinnedItems(items);
    const afterMoreButtonItems = items.filter((item) => item.afterMoreButton);
    return (getItemsHeight(pinnedItems) +
        getItemsHeight(afterMoreButtonItems) +
        (pinnedItems.length === items.length ? 0 : ITEM_HEIGHT));
}
function getMoreButtonItem(menuMoreTitle) {
    return {
        id: COLLAPSE_ITEM_ID,
        title: menuMoreTitle,
        icon: Ellipsis,
        iconSize: 18,
    };
}
function getAutosizeListItems(items, height, collapseItem) {
    var _a, _b, _c;
    const afterMoreButtonItems = items.filter((item) => item.afterMoreButton);
    const regularItems = items.filter((item) => !item.afterMoreButton);
    const listItems = [...regularItems, ...afterMoreButtonItems];
    const allItemsHeight = getItemsHeight(listItems);
    if (allItemsHeight <= height) {
        return { listItems, collapseItems: [] };
    }
    const collapseItemHeight = getItemHeight(collapseItem);
    listItems.splice(regularItems.length, 0, collapseItem);
    const collapseItems = [];
    let listHeight = allItemsHeight + collapseItemHeight;
    let index = listItems.length;
    while (listHeight > height) {
        if (index === 0) {
            break;
        }
        index--;
        const item = listItems[index];
        if (item.pinned || item.id === COLLAPSE_ITEM_ID || item.afterMoreButton) {
            continue;
        }
        if (item.type === 'divider') {
            if (index + 1 < listItems.length && ((_a = listItems[index + 1]) === null || _a === void 0 ? void 0 : _a.type) === 'divider') {
                listHeight -= getItemHeight(item);
                listItems.splice(index, 1);
            }
            continue;
        }
        listHeight -= getItemHeight(item);
        collapseItems.unshift(...listItems.splice(index, 1));
    }
    if (((_b = listItems[index]) === null || _b === void 0 ? void 0 : _b.type) === 'divider' &&
        (index === 0 || ((_c = listItems[index - 1]) === null || _c === void 0 ? void 0 : _c.type) === 'divider')) {
        listItems.splice(index, 1);
    }
    return { listItems, collapseItems };
}
function isMenuItem(item) {
    return (item === null || item === void 0 ? void 0 : item.id) !== undefined;
}

var css_248z = ".gn-composite-bar-item{--gn-composite-bar-item-action-size:36px;--_--horizontal-divider-line-color:var(--g-color-line-generic);--_--item-background-color-hover:var(--g-color-base-simple-hover);--_--item-general-icon-color:var(--g-color-text-primary);--_--item-icon-color:var(--g-color-text-misc);--_--item-text-color:var(--g-color-text-primary);--_--item-collapsed-radius:7px;--_--item-selected-text-color:var(--g-color-text-primary);--_--item-selected-background-color-active:var(--g-color-base-selection);align-items:center;cursor:pointer;display:flex;height:100%;width:100%}.gn-composite-bar-item__icon{color:var(--gn-aside-header-item-icon-color,var(--_--item-icon-color))}.gn-composite-bar-item_current .gn-composite-bar-item__icon{color:var(--gn-aside-header-item-current-icon-color,var(--gn-aside-header-item-icon-color,var(--_--item-icon-color)))}.gn-composite-bar-highlighted-item .gn-composite-bar-item__icon,.gn-composite-bar_subheader .gn-composite-bar-item__icon,.gn-footer-item .gn-composite-bar-item__icon{color:var(--gn-aside-header-general-item-icon-color,var(--_--item-general-icon-color))}.gn-composite-bar-highlighted-item.gn-composite-bar-item_current .gn-composite-bar-item__icon,.gn-composite-bar_subheader .gn-composite-bar-item_current .gn-composite-bar-item__icon,.gn-footer-item.gn-composite-bar-item_current .gn-composite-bar-item__icon{color:var(--gn-aside-header-item-current-icon-color,var(--gn-aside-header-general-item-icon-color,var(--_--item-general-icon-color)))}.gn-composite-bar-item__icon-tooltip .g-action-tooltip__description{color:var(--g-color-text-light-primary);margin-block-start:0}.gn-composite-bar-item__icon-place{align-items:center;display:flex;flex-shrink:0;height:100%;justify-content:center;width:var(--gn-aside-header-min-width)}.gn-composite-bar-item__title{display:flex;overflow:hidden}.gn-composite-bar-item__title-text{color:var(--gn-aside-header-item-text-color,var(--_--item-text-color));overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.gn-composite-bar-item_current .gn-composite-bar-item__title-text{color:var(--gn-aside-header-item-current-text-color,var(--_--item-selected-text-color))}.gn-composite-bar-item__title-adornment{margin:0 10px}.gn-composite-bar-item__collapse-item{--_--item-icon-color:var(--g-color-text-misc);align-items:center;cursor:pointer;display:flex;height:100%;padding:0 16px;width:100%}.gn-composite-bar-item__collapse-item-icon{color:var(--gn-aside-header-item-icon-color,var(--_--item-icon-color));margin-right:10px}.gn-composite-bar-item__collapse-item .gn-composite-bar-item__title-adornment{margin-right:0}.gn-composite-bar-item__menu-divider{border-top:1px solid var(--gn-aside-header-divider-horizontal-color,var(--_--horizontal-divider-line-color));cursor:default;margin:0 8px;width:100%}.gn-composite-bar-item__collapse-items-popup-content{padding:4px 0}.gn-composite-bar-item__link{align-items:center;display:flex;height:100%;width:100%}.gn-composite-bar-item__link,.gn-composite-bar-item__link:active,.gn-composite-bar-item__link:focus,.gn-composite-bar-item__link:hover,.gn-composite-bar-item__link:visited{color:inherit;outline:none;text-decoration:none}.gn-composite-bar-item__btn-icon{align-items:center;display:flex;height:100%;justify-content:center;width:100%}.gn-composite-bar-item_type_action{background:var(--g-color-base-float);border-radius:var(--gn-composite-bar-item-action-size);box-shadow:0 0 0 1px rgba(0,0,0,.03),0 5px 6px rgba(0,0,0,.12);height:var(--gn-composite-bar-item-action-size);justify-content:center;margin:0 10px 8px;transition:transform .1s ease-out,background-color .15s linear}.gn-composite-bar-item_type_action:focus-visible{box-shadow:0 0 0 2px var(--g-color-line-misc)}.gn-composite-bar-item_type_action:hover{background-color:var(--g-color-base-float-hover)}.gn-composite-bar-item_type_action:active{box-shadow:0 1px 2px var(--g-color-sfx-shadow);transform:scale(.96);transition:none}.gn-composite-bar-item_type_action .gn-composite-bar-item__icon-place{width:var(--gn-composite-bar-item-action-size)}.gn-composite-bar-item_type_action .gn-composite-bar-item__title{margin-right:16px}.gn-composite-bar-item__icon-tooltip_item-type_action{margin-left:10px}.gn-composite-bar-item:not(.gn-composite-bar-item_compact).gn-composite-bar-item_current.gn-composite-bar-item_type_regular{background-color:var(--gn-aside-header-item-current-background-color,var(--_--item-selected-background-color-active));border-radius:var(--gn-aside-header-item-expanded-radius)}.gn-composite-bar-item:not(.gn-composite-bar-item_compact):hover.gn-composite-bar-item_type_regular{background-color:var(--gn-aside-header-item-current-background-color-hover,var(--gn-aside-header-item-current-background-color,var(--_--item-selected-background-color-active)));border-radius:var(--gn-aside-header-item-expanded-radius)}.gn-composite-bar-item:not(.gn-composite-bar-item_compact):not(.gn-composite-bar-item_current):hover.gn-composite-bar-item_type_regular{background-color:var(--gn-aside-header-item-background-color-hover,var(--_--item-background-color-hover));border-radius:var(--gn-aside-header-item-expanded-radius)}.gn-composite-bar-item_compact.gn-composite-bar-item_type_action{width:var(--gn-composite-bar-item-action-size)}.gn-composite-bar-item_compact.gn-composite-bar-item_type_action .gn-composite-bar-item__title{margin:0}.gn-composite-bar-item_compact.gn-composite-bar-item_current.gn-composite-bar-item_type_regular .gn-composite-bar-item__btn-icon{background-color:transparent;position:relative}.gn-composite-bar-item_compact.gn-composite-bar-item_current.gn-composite-bar-item_type_regular .gn-composite-bar-item__btn-icon:before{background-color:var(--gn-aside-header-item-current-background-color,var(--_--item-selected-background-color-active));border-radius:var(--gn-aside-header-item-collapsed-radius,var(--_--item-collapsed-radius));content:\"\";height:var(--gn-aside-header-item-icon-background-size,var(--_--item-icon-background-size));left:50%;margin-left:-19px;margin-top:-19px;position:absolute;top:50%;width:var(--gn-aside-header-item-icon-background-size,var(--_--item-icon-background-size));z-index:-1}.gn-composite-bar-item_compact:hover.gn-composite-bar-item_type_regular .gn-composite-bar-item__btn-icon{background-color:transparent;position:relative}.gn-composite-bar-item_compact:hover.gn-composite-bar-item_type_regular .gn-composite-bar-item__btn-icon:before{background-color:var(--gn-aside-header-item-current-background-color-hover,var(--gn-aside-header-item-current-background-color,var(--_--item-selected-background-color-active)));border-radius:var(--gn-aside-header-item-collapsed-radius,var(--_--item-collapsed-radius));content:\"\";height:var(--gn-aside-header-item-icon-background-size,var(--_--item-icon-background-size));left:50%;margin-left:-19px;margin-top:-19px;position:absolute;top:50%;width:var(--gn-aside-header-item-icon-background-size,var(--_--item-icon-background-size));z-index:-1}.gn-composite-bar-item_compact:not(.gn-composite-bar-item_current):hover.gn-composite-bar-item_type_regular .gn-composite-bar-item__btn-icon{background-color:transparent;position:relative}.gn-composite-bar-item_compact:not(.gn-composite-bar-item_current):hover.gn-composite-bar-item_type_regular .gn-composite-bar-item__btn-icon:before{background-color:var(--gn-aside-header-item-background-color-hover,var(--_--item-background-color-hover));border-radius:var(--gn-aside-header-item-collapsed-radius,var(--_--item-collapsed-radius));content:\"\";height:var(--gn-aside-header-item-icon-background-size,var(--_--item-icon-background-size));left:50%;margin-left:-19px;margin-top:-19px;position:absolute;top:50%;width:var(--gn-aside-header-item-icon-background-size,var(--_--item-icon-background-size));z-index:-1}";
styleInject(css_248z);

const b = block('composite-bar-item');
function renderItemTitle(item) {
    let titleNode = React__default.createElement("div", { className: b('title-text') }, item.title);
    if (item.rightAdornment) {
        titleNode = (React__default.createElement(React__default.Fragment, null,
            titleNode,
            React__default.createElement("div", { className: b('title-adornment') }, item.rightAdornment)));
    }
    return titleNode;
}
const defaultPopupPlacement = ['right-end'];
const defaultPopupOffset = [-20, 8];
const Item = (props) => {
    const { item, className, collapseItems, onMouseLeave, onMouseEnter, enableTooltip = true, popupVisible = false, popupAnchor, popupPlacement = defaultPopupPlacement, popupOffset = defaultPopupOffset, popupKeepMounted, popupContentClassName, renderPopupContent, onClosePopup, onItemClick, onItemClickCapture, bringForward, } = props;
    const { compact } = useAsideHeaderContext();
    const [open, toggleOpen] = React__default.useState(false);
    const ref = React__default.useRef(null);
    const anchorRef = popupAnchor || ref;
    const highlightedRef = React__default.useRef(null);
    const type = item.type || ITEM_TYPE_REGULAR;
    const current = item.current || false;
    const tooltipText = item.tooltipText || item.title;
    const icon = item.icon;
    const iconSize = item.iconSize || ASIDE_HEADER_ICON_SIZE;
    const iconQa = item.iconQa;
    const collapsedItem = item.id === COLLAPSE_ITEM_ID;
    const modifiers = React__default.useMemo(() => [
        {
            name: 'compact',
            enabled: true,
            options: { compact },
            phase: 'main',
            fn() { },
        },
    ], [compact]);
    const onClose = React__default.useCallback((event) => {
        var _a;
        if (event instanceof MouseEvent &&
            event.target &&
            ((_a = ref.current) === null || _a === void 0 ? void 0 : _a.contains(event.target))) {
            return;
        }
        onClosePopup === null || onClosePopup === void 0 ? void 0 : onClosePopup();
    }, [onClosePopup]);
    if (item.type === 'divider') {
        return React__default.createElement("div", { className: b('menu-divider') });
    }
    const makeIconNode = (iconEl) => {
        return compact ? (React__default.createElement(ActionTooltip, { title: "", description: tooltipText, disabled: !enableTooltip || (collapsedItem && open) || popupVisible, placement: "right", className: b('icon-tooltip', { 'item-type': type }) },
            React__default.createElement("div", { onMouseEnter: () => onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter(), onMouseLeave: () => onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave(), className: b('btn-icon') }, iconEl))) : (iconEl);
    };
    const makeNode = ({ icon: iconEl, title: titleEl }) => {
        const createdNode = (React__default.createElement(React__default.Fragment, null,
            React__default.createElement("div", { className: b({ type, current, compact }, className), ref: ref, "data-qa": item.qa, onClick: (event) => {
                    if (collapsedItem) {
                        /**
                         * If we call onItemClick for collapsedItem then:
                         * - User get unexpected item in onItemClick callback
                         * - onClosePanel calls twice for each popuped item, as result it will prevent opening of panelItems
                         */
                        toggleOpen(!open);
                    }
                    else {
                        onItemClick === null || onItemClick === void 0 ? void 0 : onItemClick(item, false, event);
                    }
                }, onClickCapture: onItemClickCapture, onMouseEnter: () => {
                    if (!compact) {
                        onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter();
                    }
                }, onMouseLeave: () => {
                    if (!compact) {
                        onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave();
                    }
                } },
                React__default.createElement("div", { className: b('icon-place'), ref: highlightedRef }, makeIconNode(iconEl)),
                React__default.createElement("div", { className: b('title'), title: typeof item.title === 'string' ? item.title : undefined }, titleEl)),
            renderPopupContent && Boolean(anchorRef === null || anchorRef === void 0 ? void 0 : anchorRef.current) && (React__default.createElement(Popup, { contentClassName: b('popup', popupContentClassName), open: popupVisible, keepMounted: popupKeepMounted, placement: popupPlacement, offset: popupOffset, anchorRef: anchorRef, onClose: onClose, modifiers: modifiers }, renderPopupContent()))));
        return item.link ? (React__default.createElement("a", { href: item.link, className: b('link') }, createdNode)) : (createdNode);
    };
    const iconNode = icon ? (React__default.createElement(Icon, { qa: iconQa, data: icon, size: iconSize, className: b('icon') })) : null;
    const titleNode = renderItemTitle(item);
    const params = { icon: iconNode, title: titleNode };
    let highlightedNode = null;
    let node;
    const opts = { compact: Boolean(compact), collapsed: false, item, ref };
    if (typeof item.itemWrapper === 'function') {
        node = item.itemWrapper(params, makeNode, opts);
        highlightedNode =
            bringForward &&
                item.itemWrapper(params, ({ icon: iconEl }) => makeIconNode(iconEl), opts);
    }
    else {
        node = makeNode(params);
        highlightedNode = bringForward && makeIconNode(iconNode);
    }
    return (React__default.createElement(React__default.Fragment, null,
        bringForward && (React__default.createElement(HighlightedItem, { iconNode: highlightedNode, iconRef: highlightedRef, onClick: (event) => onItemClick === null || onItemClick === void 0 ? void 0 : onItemClick(item, false, event), onClickCapture: onItemClickCapture })),
        node,
        open && collapsedItem && (collapseItems === null || collapseItems === void 0 ? void 0 : collapseItems.length) && Boolean(anchorRef === null || anchorRef === void 0 ? void 0 : anchorRef.current) && (React__default.createElement(CollapsedPopup, Object.assign({}, props, { anchorRef: ref, onClose: () => toggleOpen(false) })))));
};
Item.displayName = 'Item';
function CollapsedPopup({ onItemClick, collapseItems, anchorRef, onClose, }) {
    const { compact } = useAsideHeaderContext();
    return (collapseItems === null || collapseItems === void 0 ? void 0 : collapseItems.length) ? (React__default.createElement(Popup, { placement: POPUP_PLACEMENT, open: true, anchorRef: anchorRef, onClose: onClose },
        React__default.createElement("div", { className: b('collapse-items-popup-content') },
            React__default.createElement(List, { itemClassName: b('root-collapse-item'), items: collapseItems, selectedItemIndex: getSelectedItemIndex(collapseItems), itemHeight: POPUP_ITEM_HEIGHT, itemsHeight: collapseItems.length * POPUP_ITEM_HEIGHT, virtualized: false, filterable: false, sortable: false, onItemClick: onClose, renderItem: (collapseItem) => {
                    const makeCollapseNode = ({ title: titleEl, icon: iconEl, }) => {
                        const res = (React__default.createElement("div", { className: b('collapse-item'), onClick: (event) => {
                                onItemClick === null || onItemClick === void 0 ? void 0 : onItemClick(collapseItem, true, event);
                            } },
                            iconEl,
                            titleEl));
                        return collapseItem.link ? (React__default.createElement("a", { href: collapseItem.link, className: b('link') }, res)) : (res);
                    };
                    const titleNode = renderItemTitle(collapseItem);
                    const iconNode = collapseItem.icon && (React__default.createElement(Icon, { data: collapseItem.icon, size: 14, className: b('collapse-item-icon') }));
                    const params = { title: titleNode, icon: iconNode };
                    const opts = {
                        compact: Boolean(compact),
                        collapsed: true,
                        item: collapseItem,
                        ref: anchorRef,
                    };
                    if (typeof collapseItem.itemWrapper === 'function') {
                        return collapseItem.itemWrapper(params, makeCollapseNode, opts);
                    }
                    else {
                        return makeCollapseNode(params);
                    }
                } })))) : null;
}

export { COLLAPSE_ITEM_ID as C, Item as I, getAutosizeListItems as a, getSelectedItemIndex as b, getItemHeight as c, getItemsHeight as d, getMoreButtonItem as e, getItemsMinHeight as g, isMenuItem as i };
//# sourceMappingURL=Item-fb2a4efc.js.map

export { AsideHeader } from './AsideHeader.js';
export { AsideHeaderContextProvider, useAsideHeaderContext } from './AsideHeaderContext.js';
export { FooterItem } from './FooterItem.js';
export { PageLayout } from './PageLayout.js';
import { L as Logo } from './PageLayoutAside-0c0d6943.js';
export { L as Logo, P as PageLayoutAside } from './PageLayoutAside-0c0d6943.js';
export { AsideFallback } from './AsideFallback.js';
export { Drawer, DrawerItem } from './Drawer.js';
export { M as MOBILE_HEADER_EVENT_NAMES, a as MobileHeader, F as MobileHeaderFooterItem, b as MobileLogo, g as getMobileHeaderCustomEvent } from './FooterItem-42f3ac69.js';
import React__default, { useState, useLayoutEffect, useMemo, useRef, useCallback } from 'react';
import { Menu, DropdownMenu, Button, Icon, Sheet } from '@gravity-ui/uikit';
import { d as debounce_1 } from './debounce-64cd2b4c.js';
import { b as block } from './cn-ffe5e9f5.js';
import { _ as __rest } from './tslib.es6-3cd4e99f.js';
import { s as styleInject } from './style-inject.es-1f59c1d0.js';
import { Ellipsis } from '@gravity-ui/icons';
export { P as ActionBar } from './ActionBar-834b178a.js';
export { T as Title } from './Title-03b4255a.js';
export { H as HotkeysPanel } from './HotkeysPanel-f0e2a06c.js';
export { S as Settings, a as useSettingsContext, u as useSettingsSelectionContext } from './Settings-e660a4c5.js';
import './Item-fb2a4efc.js';
import './constants-b1604ff5.js';
import './Content-f94ba85d.js';
import './utils-117463a5.js';
import '@gravity-ui/uikit/i18n';
import './divider-collapsed-a0ef54c3.js';
import 'react-dom';
import '@bem-react/classname';

function useOverflowingHorizontalListItems({ containerRef, items, itemSelector, moreButtonWidth = 0, }) {
    const [containerWidth, setContainerWidth] = useState(0);
    const [itemWidths, setItemWidths] = useState([]);
    useLayoutEffect(() => {
        if (!containerRef.current) {
            return;
        }
        const measureItemSizes = () => {
            var _a, _b;
            const itemElements = Array.from((_b = (_a = containerRef.current) === null || _a === void 0 ? void 0 : _a.querySelectorAll(itemSelector)) !== null && _b !== void 0 ? _b : []);
            setItemWidths(itemElements.map((item) => item.clientWidth));
        };
        measureItemSizes();
    }, [containerRef, itemSelector]);
    useLayoutEffect(() => {
        const footerMenu = containerRef.current;
        if (!footerMenu) {
            return;
        }
        const updateContainerSize = (entries) => {
            if (entries.length > 0 && footerMenu) {
                setContainerWidth(entries[0].contentRect.width);
            }
        };
        const updateContainerSizeDebounced = debounce_1(updateContainerSize, 100);
        const footerMenuResizeObserver = new ResizeObserver(updateContainerSizeDebounced);
        footerMenuResizeObserver.observe(footerMenu);
    }, [containerRef]);
    const isMeasured = containerWidth > 0;
    const { visibleItems, hiddenItems } = useMemo(() => {
        var _a, _b;
        if (!isMeasured) {
            return {
                visibleItems: items !== null && items !== void 0 ? items : [],
                hiddenItems: [],
            };
        }
        const itemsCount = itemWidths.length;
        let visibleItemsCount = 0;
        let remainingContainerWidth = containerWidth;
        for (const width of itemWidths) {
            remainingContainerWidth -= width;
            if (remainingContainerWidth < moreButtonWidth) {
                const isMoreThanOneItemLeft = itemsCount !== visibleItemsCount + 1;
                const hasNoSpaceForTheLastItem = remainingContainerWidth < 0;
                if (isMoreThanOneItemLeft || hasNoSpaceForTheLastItem) {
                    break;
                }
            }
            visibleItemsCount++;
        }
        return {
            visibleItems: (_a = items === null || items === void 0 ? void 0 : items.slice(0, visibleItemsCount)) !== null && _a !== void 0 ? _a : [],
            hiddenItems: (_b = items === null || items === void 0 ? void 0 : items.slice(visibleItemsCount)) !== null && _b !== void 0 ? _b : [],
        };
    }, [containerWidth, isMeasured, itemWidths, items, moreButtonWidth]);
    return { visibleItems, hiddenItems, measured: isMeasured };
}

var css_248z$2 = ".gn-footer-menu-item{align-items:center;align-self:stretch;display:flex;height:100%;justify-content:center}.gn-footer-menu-item .g-menu__item-content{color:var(--g-color-text-secondary);font-size:var(--g-text-body-1-font-size);font-weight:var(--g-text-body-font-weight);line-height:var(--g-text-body-1-line-height);overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.gn-footer-menu-item[class]:hover{background-color:inherit}.gn-footer-menu-item[class]:hover[href] .g-menu__item-content{color:var(--g-color-text-link-hover)}";
styleInject(css_248z$2);

const b$2 = block('footer-menu-item');
const MenuItem = (_a) => {
    var { text, className } = _a, menuItemProps = __rest(_a, ["text", "className"]);
    return (React__default.createElement(Menu.Item, Object.assign({ className: b$2(null, className) }, menuItemProps), text));
};

const moreItemsPopupProps = {
    placement: 'top-start',
};

var css_248z$1 = ".gn-footer_desktop{align-items:center;background:var(--g-color-base-background);display:flex;gap:var(--g-spacing-6);height:40px;justify-content:flex-end;padding:0 var(--g-spacing-6) 0 var(--g-spacing-3)}.gn-footer_desktop .gn-footer__menu{align-items:center;align-self:stretch;display:flex;flex:1;min-width:0;visibility:hidden}.gn-footer_desktop .gn-footer__menu_measured{visibility:visible}.gn-footer_desktop .gn-footer__list[class]{background-color:inherit;display:flex;height:100%;padding:0}.gn-footer_desktop .gn-footer__more-button svg{color:var(--g-color-text-secondary)}.gn-footer_desktop .gn-footer__right{align-items:center;display:flex;gap:var(--g-spacing-5)}.gn-footer_desktop .gn-footer__copyright{color:var(--g-color-text-secondary);font-size:var(--g-text-body-1-font-size);font-weight:var(--g-text-body-font-weight);line-height:var(--g-text-body-1-line-height);white-space:nowrap}.gn-footer_desktop .gn-footer__copyright_small{font-size:var(--g-text-caption-2-font-size);font-weight:var(--g-text-caption-font-weight);line-height:var(--g-text-caption-2-line-height)}.gn-footer_with-divider{border-top:1px solid var(--g-color-line-generic)}.gn-footer_view_clear{background:transparent;z-index:-1}";
styleInject(css_248z$1);

const b$1 = block('footer');
const Footer = ({ className, menuItems: providedMenuItems, withDivider, moreButtonTitle, onMoreButtonClick, view = 'normal', logo, logoWrapperClassName, copyright, }) => {
    var _a;
    const menuContainerRef = useRef(null);
    const menuItems = view === 'clear' ? undefined : providedMenuItems;
    const { visibleItems, hiddenItems, measured } = useOverflowingHorizontalListItems({
        containerRef: menuContainerRef,
        items: menuItems,
        itemSelector: `.${b$1('menu-item')}`,
        moreButtonWidth: 28,
    });
    const moreButtonProps = useMemo(() => ({
        title: moreButtonTitle,
    }), [moreButtonTitle]);
    const dropdownMenuItems = useMemo(() => hiddenItems.map((item) => (Object.assign(Object.assign({}, item), { action: item.onClick }))), [hiddenItems]);
    const shouldRenderLogo = view !== 'clear' && Boolean(logo);
    const shouldRenderMenu = ((_a = menuItems === null || menuItems === void 0 ? void 0 : menuItems.length) !== null && _a !== void 0 ? _a : 0) > 0;
    return (React__default.createElement("footer", { className: b$1({ desktop: true, 'with-divider': withDivider, view }, className) },
        shouldRenderMenu && (React__default.createElement("div", { className: b$1('menu', { measured }), ref: menuContainerRef },
            visibleItems.length > 0 && (React__default.createElement(Menu, { className: b$1('list') }, visibleItems.map((item, index) => (React__default.createElement(MenuItem, Object.assign({ key: index }, item, { className: b$1('menu-item', item.className) })))))),
            dropdownMenuItems.length > 0 && (React__default.createElement(DropdownMenu, { items: dropdownMenuItems, switcherWrapperClassName: b$1('more-button'), popupProps: moreItemsPopupProps, defaultSwitcherProps: moreButtonProps, onSwitcherClick: onMoreButtonClick })))),
        React__default.createElement("div", { className: b$1('right') },
            React__default.createElement("small", { className: b$1('copyright', { small: !(menuItems === null || menuItems === void 0 ? void 0 : menuItems.length) }) }, copyright),
            shouldRenderLogo && (React__default.createElement("div", { className: logoWrapperClassName },
                React__default.createElement(Logo, Object.assign({}, logo)))))));
};

var css_248z = ".gn-footer_mobile{background:var(--g-color-base-background);display:flex;flex-direction:column;padding:var(--g-spacing-1) var(--g-spacing-6) var(--g-spacing-3) var(--g-spacing-3)}.gn-footer_mobile .gn-footer_with-divider{border-top:1px solid var(--g-color-line-generic)}.gn-footer_mobile .gn-footer__menu{align-items:center;display:flex;justify-content:space-between;margin-bottom:var(--g-spacing-1);visibility:hidden}.gn-footer_mobile .gn-footer__menu_measured{visibility:visible}.gn-footer_mobile .gn-footer__list[class]{background-color:inherit;display:flex;padding:0}.gn-footer_mobile .gn-footer__menu-item{padding:var(--g-spacing-2) var(--g-spacing-3)}.gn-footer_mobile .gn-footer__bottom-row{align-items:center;display:flex;justify-content:space-between}.gn-footer_mobile .gn-footer__copyright{color:var(--g-color-text-secondary);font-size:var(--g-text-caption-2-font-size);font-weight:var(--g-text-caption-font-weight);line-height:var(--g-text-caption-2-line-height);padding:0 var(--g-spacing-3);white-space:nowrap}.gn-footer__modal .gn-footer__menu-item{color:var(--g-color-text-primary);font-size:var(--g-text-body-2-font-size);font-weight:var(--g-text-body-font-weight);height:48px;line-height:var(--g-text-body-2-line-height)}.gn-footer_view_clear{background:transparent;z-index:-1}.gn-footer_view_clear .gn-footer__bottom-row{justify-content:flex-end}";
styleInject(css_248z);

const b = block('footer');
const modalId = 'footer-more-items';
const MobileFooter = ({ className, menuItems: providedMenuItems, withDivider, moreButtonTitle, onMoreButtonClick, view = 'normal', logo, logoWrapperClassName, copyright, }) => {
    const [moreItemsMenuVisible, setMoreItemsMenuVisible] = useState(false);
    const menuContainerRef = useRef(null);
    const handleOpenMoreItemsMenu = useCallback((event) => {
        setMoreItemsMenuVisible(true);
        onMoreButtonClick === null || onMoreButtonClick === void 0 ? void 0 : onMoreButtonClick(event);
    }, [onMoreButtonClick]);
    const handleCloseMoreItemsMenu = useCallback(() => {
        setMoreItemsMenuVisible(false);
    }, []);
    const menuItems = view === 'clear' ? undefined : providedMenuItems;
    const { visibleItems, hiddenItems, measured } = useOverflowingHorizontalListItems({
        containerRef: menuContainerRef,
        items: menuItems,
        itemSelector: `.${b('menu-item')}`,
        moreButtonWidth: 28,
    });
    const renderMenu = (items) => (React__default.createElement(Menu, { className: b('list') }, items.map((item, index) => (React__default.createElement(MenuItem, Object.assign({ key: index }, item, { className: b('menu-item', item.className) }))))));
    const shouldRenderLogo = view !== 'clear' && Boolean(logo);
    return (React__default.createElement("footer", { className: b({ mobile: true, 'with-divider': withDivider, view }, className) },
        React__default.createElement("div", { className: b('menu', { measured }), ref: menuContainerRef },
            visibleItems.length > 0 && renderMenu(visibleItems),
            hiddenItems.length > 0 && (React__default.createElement(React__default.Fragment, null,
                React__default.createElement(Button, { view: "flat-secondary", size: "l", onClick: handleOpenMoreItemsMenu, title: moreButtonTitle },
                    React__default.createElement(Icon, { data: Ellipsis, size: 16 })),
                React__default.createElement(Sheet, { id: modalId, visible: moreItemsMenuVisible, className: b('modal'), contentClassName: b('modal-content'), onClose: handleCloseMoreItemsMenu }, renderMenu(hiddenItems))))),
        React__default.createElement("div", { className: b('bottom-row') },
            React__default.createElement("small", { className: b('copyright') }, copyright),
            shouldRenderLogo && (React__default.createElement("div", { className: logoWrapperClassName },
                React__default.createElement(Logo, Object.assign({}, logo)))))));
};

export { Footer, MobileFooter };
//# sourceMappingURL=index.js.map
